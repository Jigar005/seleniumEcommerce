package com.apex.customer.service.core;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpDelete;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.impl.client.HttpClientBuilder;

public class HttpUtil {
	public static HttpResponse sendAndReceiveMsgWithGetRequest(String url) throws IOException, ClientProtocolException {
		HttpClient client = HttpClientBuilder.create().build();
		HttpGet requestMessage = new HttpGet(url);
		HttpResponse response = client.execute(requestMessage);
		return response;
	}
	public static HttpResponse sendAndReceiveMsgWithPostRequest(String url) throws IOException, ClientProtocolException {
		HttpClient client = HttpClientBuilder.create().build();
		HttpPost requestMessage = new HttpPost(url);
		HttpResponse response = client.execute(requestMessage);
		return response;
	}
	public static HttpResponse sendAndReceiveMsgWithPutRequest(String url, String reqMessage) throws IOException, ClientProtocolException {
		HttpClient client = HttpClientBuilder.create().build();
		HttpPut requestMessage = new HttpPut(url);
		HttpResponse response = client.execute(requestMessage);
		return response;
	}
	public static HttpResponse sendAndReceiveMsgWithDeleteRequest(String url) throws IOException, ClientProtocolException {
		HttpClient client = HttpClientBuilder.create().build();
		HttpDelete requestMessage = new HttpDelete(url);
		HttpResponse response = client.execute(requestMessage);
		return response;
	}

	public static String getResposeString(HttpResponse response) throws IOException {
		BufferedReader read = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
		StringBuffer result = new StringBuffer();
		String line ="";
		while ((line = read.readLine())!= null)
		{result.append(line + "/n");}
		return result.toString();
	}
	
	
	
	
	
	
}
